package thames.sterling.loans.model.applicant.service;

import java.util.Map;

import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import thames.sterling.loans.model.applicant.service.common.ApplicantService;
import thames.sterling.loans.model.common.SequenceIdUtil;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 22 00:34:15 BST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ApplicantServiceImpl extends ApplicationModuleImpl implements ApplicantService {
    /**
     * This is the default constructor (do not remove).
     */
    public ApplicantServiceImpl() {
    }
    
    /**
     * Initialize the row for the applicat objects
     */
    public Map initializeObjects(Map in){
        
        Map out = new java.util.HashMap();
       
        // Finanical 
        ViewObjectImpl applicantFianceDetails = this.getApplicantFianceDetails();
        Row finRow = (ViewRowImpl) applicantFianceDetails.createRow();
        applicantFianceDetails.insertRow(finRow);
        finRow.setNewRowState(Row.STATUS_INITIALIZED);
        finRow.setAttribute("FinDetailsId", SequenceIdUtil.getUniqueId());
        Long perId = SequenceIdUtil.getUniqueId();
        finRow.setAttribute("ApplicantId", perId);
        
        // Personal
        ViewObjectImpl applicantPesonalDetailss = this.getApplicantPesonalDetails();
        Row perRow = (ViewRowImpl) applicantPesonalDetailss.createRow();
        applicantPesonalDetailss.insertRow(perRow);
        perRow.setNewRowState(Row.STATUS_INITIALIZED);
        perRow.setAttribute("ApplicantId", perId);
        
        //Address
        ViewObjectImpl applicantAddress = this.getApplicantAddress();
        Row addrRow = (ViewRowImpl) applicantAddress.createRow();
        applicantAddress.insertRow(addrRow);
        addrRow.setNewRowState(Row.STATUS_INITIALIZED);
        addrRow.setAttribute("AplcntAddressId",  SequenceIdUtil.getUniqueId());
        perRow.setAttribute("ApplicantId", perId);
        
        return out;
    }

    /**
     * Container's getter for ApplicantAddress.
     * @return ApplicantAddress
     */
    public ViewObjectImpl getApplicantAddress() {
        return (ViewObjectImpl) findViewObject("ApplicantAddress");
    }


    /**
     * Container's getter for EmploymentTypeVO1.
     * @return EmploymentTypeVO1
     */
    public ViewObjectImpl getEmploymentType() {
        return (ViewObjectImpl) findViewObject("EmploymentType");
    }

    /**
     * Container's getter for LoanApprovalStatusesVO1.
     * @return LoanApprovalStatusesVO1
     */
    public ViewObjectImpl getLoanApprovalStatuses() {
        return (ViewObjectImpl) findViewObject("LoanApprovalStatuses");
    }

    /**
     * Container's getter for LoanPurposeVO1.
     * @return LoanPurposeVO1
     */
    public ViewObjectImpl getLoanPurpose() {
        return (ViewObjectImpl) findViewObject("LoanPurpose");
    }

    /**
     * Container's getter for ApplicantFianceDetailsVO1.
     * @return ApplicantFianceDetailsVO1
     */
    public ViewObjectImpl getApplicantFianceDetails() {
        return (ViewObjectImpl) findViewObject("ApplicantFianceDetails");
    }

    /**
     * Container's getter for ApplicantPesonalDetailsVO1.
     * @return ApplicantPesonalDetailsVO1
     */
    public ViewObjectImpl getApplicantPesonalDetails() {
        return (ViewObjectImpl) findViewObject("ApplicantPesonalDetails");
    }
    
    
}

